package ru.gb.jcore.seminars.seminar02;

/**
 * «Шифр Цезаря», с булевым параметром зашифрования/расшифрования, и числовым ключом
 */
public class СipherCaesar {
    /**
     * метод «Шифр Цезаря», с булевым параметром зашифрования/расшифрования, и числовым ключом
     * @param in текст, который нужно обработать
     * @param key число, на которое сдвигается символ
     * @param encrypt выбор зашифровать или разшифровать
     * @return возвращает закодированный или раскодированный текст
     */
    private static String caesar(String in, int key, boolean encrypt){
        /**
         * если текста нет или введено пустое значение, возвращает null
         */
        if(in == null || in.isEmpty()){
            return null;
        }
        /**
         * Определяем длину текста
         * создаем массив символов, длиной введенным текстом
         * в цикле каждому элементу массива out присваиваем значение символа
         * сдвинутое на значение ключа
         * сторона сдвига, определяется булевой переменной encrypt
         * после возвращает строковое значение массива символов
         */

        final int len = in.length();
        char[] out = new char[len];
        for(int i = 0; i < len; i++){
            out[i] = (char)(in.charAt(i) + ((encrypt)?key:-key));
        }
        return new String(out);
    }
}
